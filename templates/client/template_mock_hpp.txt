{% with %}
{% set class_namespace_name = meta.interface_name+"ClientMock" %}
{% set gen_interface_name = "Interface"+meta.interface_name+"Client" %}
{% set class_name = "C"+class_namespace_name %}
///////////////////////////////////////////////////////////////////////////////
///
/// Project          {{ settings.project_name }}
/// Copyright (c)    2017
/// Company          {{ settings.company }}
///                  All rights reserved
///
////////////////////////////////////////////////////////////////////////////////
/// @file            {{ class_name }}.hpp
/// @authors         {{ settings.author }}
/// @date            27.10.17
///
/// @brief           Declaration of class {{ class_name }}
///
////////////////////////////////////////////////////////////////////////////////

#ifndef {{ class_name|upper }}_HPP_
#define {{ class_name|upper }}_HPP_

#include <gmock/gmock.h>
#include "C{{ meta.interface_name }}Client.hpp"
#include "{{ gen_interface_name }}.hpp"


namespace {{ settings.project_name }} {
namespace Interfaces {
namespace {{ class_namespace_name }} {


/* ==========================================================================================
 *                     MOCK INTERFACE
 * ==========================================================================================
 */
class {{ class_name }} : public {{ meta.interface_name }}Client::{{ gen_interface_name }} {
/* ==========================================================================================
 *                     INFORMATIONS - CommonAPI "broadcast" handlers
 * ==========================================================================================
 */
{% for broadcast in meta['broadcasts'] %}
{% set broadcast_name = "mock_information"+broadcast.name[0]|upper+broadcast.name[1:] %}
  MOCK_METHOD0({{ broadcast_name }}, void());
{% endfor %}

/* ==========================================================================================
 *                     INFORMATIONS - CommonAPI "attribute" handlers
 * ==========================================================================================
 */
{% for attribute in meta['attributes'] %}
{% set attribute_name = "mock_information"+attribute.name[0]|upper+attribute.name[1:]+"AttributeUpdate" %}
  MOCK_METHOD0({{ attribute_name }}, void());
{% endfor %}

/* ==========================================================================================
 *                                          REQUESTS
 * ==========================================================================================
 */
{% for method in meta['methods'] %}
{% set method_name = "mock_response"+method.name[0]|upper+method.name[1:] %}
  MOCK_METHOD0({{ method_name }}, void());
{% endfor %}
};

}  // namespace {{ class_namespace_name }}
}  // namespace Interfaces
}  // namespace {{ settings.project_name }}
#endif  // {{ class_name|upper }}_HPP_
{% endwith %}
